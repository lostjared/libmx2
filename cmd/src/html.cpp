#include "html.hpp"

namespace html {
    // thanks claude for this interface. 
    void gen_html(std::ostream& out, const std::shared_ptr<cmd::Node>& node) {
        out << "<!DOCTYPE html>\n";
        out << "<html>\n";
        out << "<head>\n";
        out << "  <meta charset='utf-8'>\n";
        out << "  <meta name='viewport' content='width=device-width, initial-scale=1.0'>\n";
        out << "  <title>Shell AST Visualization</title>\n";
        out << "  <link rel='preconnect' href='https://fonts.googleapis.com'>\n";
        out << "  <link rel='preconnect' href='https://fonts.gstatic.com' crossorigin>\n";
        out << "  <link href='https://fonts.googleapis.com/css2?family=Fira+Code:wght@400;500;600&family=Inter:wght@400;500;600;700&display=swap' rel='stylesheet'>\n";
        out << "  <style>\n";
        out << "    :root {\n";
        out << "      --bg-primary: #0f172a;\n";
        out << "      --bg-secondary: #1e293b;\n";
        out << "      --bg-tertiary: #334155;\n";
        out << "      --text-primary: #f8fafc;\n";
        out << "      --text-secondary: #cbd5e1;\n";
        out << "      --accent-primary: #38bdf8;\n";
        out << "      --accent-secondary: #0ea5e9;\n";
        out << "      --accent-tertiary: #0284c7;\n";
        out << "      --highlight: #2563eb;\n";
        out << "      --success: #10b981;\n";
        out << "      --warning: #f59e0b;\n";
        out << "      --error: #ef4444;\n";
        out << "      --border-radius: 8px;\n";
        out << "      --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n";
        out << "      --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n";
        out << "      --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n";
        out << "    }\n";
        out << "    * {\n";
        out << "      margin: 0;\n";
        out << "      padding: 0;\n";
        out << "      box-sizing: border-box;\n";
        out << "    }\n";
        out << "    body {\n";
        out << "      font-family: 'Inter', system-ui, -apple-system, sans-serif;\n";
        out << "      background-color: var(--bg-primary);\n";
        out << "      color: var(--text-primary);\n";
        out << "      line-height: 1.6;\n";
        out << "      padding: 2rem;\n";
        out << "      transition: all 0.3s ease;\n";
        out << "    }\n";
        out << "    header {\n";
        out << "      margin-bottom: 2rem;\n";
        out << "      border-bottom: 1px solid var(--bg-tertiary);\n";
        out << "      padding-bottom: 1rem;\n";
        out << "    }\n";
        out << "    h1 {\n";
        out << "      font-size: 2.25rem;\n";
        out << "      font-weight: 700;\n";
        out << "      color: var(--accent-primary);\n";
        out << "      margin-bottom: 0.5rem;\n";
        out << "      letter-spacing: -0.025em;\n";
        out << "    }\n";
        out << "    h2, h3, h4, h5 {\n";
        out << "      color: var(--accent-primary);\n";
        out << "      font-weight: 600;\n";
        out << "      margin: 1rem 0 0.5rem 0;\n";
        out << "      letter-spacing: -0.01em;\n";
        out << "    }\n";
        out << "    h3 {\n";
        out << "      font-size: 1.25rem;\n";
        out << "      font-weight: 500;\n";
        out << "    }\n";
        out << "    .node {\n";
        out << "      margin: 1rem 0;\n";
        out << "      padding: 1.25rem;\n";
        out << "      border-radius: var(--border-radius);\n";
        out << "      background-color: var(--bg-secondary);\n";
        out << "      border: 1px solid var(--bg-tertiary);\n";
        out << "      box-shadow: var(--shadow);\n";
        out << "      transition: all 0.2s ease-in-out;\n";
        out << "    }\n";
        out << "    .node:hover {\n";
        out << "      transform: translateY(-2px);\n";
        out << "      box-shadow: var(--shadow-lg);\n";
        out << "    }\n";
        out << "    table {\n";
        out << "      border-collapse: separate;\n";
        out << "      border-spacing: 0;\n";
        out << "      width: 100%;\n";
        out << "      margin: 1rem 0;\n";
        out << "      border-radius: var(--border-radius);\n";
        out << "      overflow: hidden;\n";
        out << "      box-shadow: var(--shadow-sm);\n";
        out << "      table-layout: fixed;\n";
        out << "    }\n";
        out << "    th, td {\n";
        out << "      word-break: break-word;\n";
        out << "      vertical-align: top;\n";
        out << "    }\n";
        out << "    th {\n";
        out << "      background-color: var(--bg-tertiary);\n";
        out << "      color: var(--text-primary);\n";
        out << "      text-align: left;\n";
        out << "      padding: 0.75rem 1rem;\n";
        out << "      font-weight: 600;\n";
        out << "      text-transform: uppercase;\n";
        out << "      font-size: 0.75rem;\n";
        out << "      letter-spacing: 0.05em;\n";
        out << "    }\n";
        out << "    td {\n";
        out << "      padding: 0.75rem 1rem;\n";
        out << "      border-top: 1px solid var(--bg-tertiary);\n";
        out << "      font-family: 'Fira Code', monospace;\n";
        out << "    }\n";
        out << "    /* Node type styles */\n";
        out << "    .command { background-color: rgba(56, 189, 248, 0.1); border-left: 3px solid var(--accent-primary); }\n";
        out << "    .pipeline { background-color: rgba(16, 185, 129, 0.1); border-left: 3px solid var(--success); }\n";
        out << "    .redirection { background-color: rgba(245, 158, 11, 0.1); border-left: 3px solid var(--warning); }\n";
        out << "    .sequence { background-color: rgba(99, 102, 241, 0.1); border-left: 3px solid #6366f1; }\n";
        out << "    .logical-and { background-color: rgba(139, 92, 246, 0.1); border-left: 3px solid #8b5cf6; }\n";
        out << "    .if-statement { background-color: rgba(236, 72, 153, 0.1); border-left: 3px solid #ec4899; }\n";
        out << "    .while-statement { background-color: rgba(248, 113, 113, 0.1); border-left: 3px solid #f87171; }\n";
        out << "    .for-statement { background-color: rgba(251, 146, 60, 0.1); border-left: 3px solid #fb923c; }\n";
        out << "    .variable-assignment { background-color: rgba(20, 184, 166, 0.1); border-left: 3px solid #14b8a6; }\n";
        out << "    .string-literal { background-color: rgba(16, 185, 129, 0.1); border-left: 3px solid #10b981; }\n";
        out << "    .number-literal { background-color: rgba(56, 189, 248, 0.1); border-left: 3px solid #38bdf8; }\n";
        out << "    .variable-reference { background-color: rgba(139, 92, 246, 0.1); border-left: 3px solid #8b5cf6; }\n";
        out << "    .binary-expression { background-color: rgba(236, 72, 153, 0.1); border-left: 3px solid #ec4899; }\n";
        out << "    .unary-expression { background-color: rgba(248, 113, 113, 0.1); border-left: 3px solid #f87171; }\n";
        out << "    .command-substitution { background-color: rgba(251, 146, 60, 0.1); border-left: 3px solid #fb923c; }\n";
        out << "    .return { background-color: rgba(234, 88, 12, 0.1); border-left: 3px solid #ea580c; }\n";
        out << "    /* Text styles */\n";
        out << "    .filename { color: #fbbf24; font-style: italic; }\n";
        out << "    .operator { color: #e11d48; font-weight: bold; }\n";
        out << "    .literal { color: #10b981; }\n";
        out << "    .variable { color: #38bdf8; }\n";
        out << "    .symbol { color: #ec4899; font-weight: 500; }\n";
        out << "    /* Responsive design */\n";
        out << "    @media (max-width: 768px) {\n";
        out << "      body { padding: 1rem; }\n";
        out << "      h1 { font-size: 1.75rem; }\n";
        out << "      .node { padding: 1rem; }\n";
        out << "    }\n";
        out << "    /* Collapsible sections */\n";
        out << "    .node .value, .node .body, .node .right, .node .left {\n";
        out << "      position: relative;\n";
        out << "      padding-left: 1.25rem;\n";
        out << "      display: block;\n";
        out << "    }\n";
        out << "    .node h3 {\n";
        out << "      cursor: pointer;\n";
        out << "      user-select: none;\n";
        out << "      display: flex;\n";
        out << "      align-items: center;\n";
        out << "    }\n";
        out << "    .node h3::before {\n";
        out << "      content: 'â–¼';\n";
        out << "      display: inline-block;\n";
        out << "      margin-right: 0.5rem;\n";
        out << "      font-size: 0.75rem;\n";
        out << "      transition: transform 0.2s ease;\n";
        out << "      transform: rotate(var(--rotate, 0deg));\n";
        out << "    }\n";
        out << "    .node h3.collapsed::before {\n";
        out << "      transform: rotate(-90deg);\n";
        out << "    }\n";
        out << "  </style>\n";
        out << "  <script>\n";
        out << "    document.addEventListener('DOMContentLoaded', function() {\n";
        out << "      document.querySelectorAll('table').forEach(table => {\n";
        out << "        void table.offsetHeight;\n";
        out << "      });\n";
        out << "      document.querySelectorAll('.node h3').forEach(header => {\n";
        out << "        header.addEventListener('click', function() {\n";
        out << "          const content = this.nextElementSibling;\n";
        out << "          if (content) {\n";
        out << "            const isVisible = getComputedStyle(content).display !== 'none';\n";
        out << "            content.style.display = isVisible ? 'none' : 'block';\n";
        out << "            this.classList.toggle('collapsed', isVisible);\n";
        out << "          }\n";
        out << "        });\n";
        out << "      });\n";
        out << "    });\n";
        out << "  </script>\n";
        out << "</head>\n";
        out << "<body>\n";
        out << "  <header>\n";
        out << "    <h1>Shell AST Visualization</h1>\n";
        out << "    <p>Interactive abstract syntax tree representation of your shell script</p>\n";
        out << "  </header>\n";
        out << "  <main>\n";
        node->print(out, 4);
        out << "  </main>\n";
        out << "</body>\n";
        out << "</html>\n";
    }
}